(()=>{var e={};e.id=276,e.ids=[276],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3873:e=>{"use strict";e.exports=require("path")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8193:(e,t,a)=>{"use strict";a.r(t),a.d(t,{patchFetch:()=>w,routeModule:()=>h,serverHooks:()=>x,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>g});var r={};a.r(r),a.d(r,{POST:()=>m});var o=a(6559),s=a(8088),i=a(7719),n=a(2190);let c=require("fs/promises");var d=a(3873);let l=require("os"),u=async()=>{let e=l.homedir();for(let t of[d.join(process.cwd(),".z-ai-config"),d.join(e,".z-ai-config"),"/etc/.z-ai-config"])try{let e=await c.readFile(t,"utf-8"),a=JSON.parse(e);if(a.baseUrl&&a.apiKey)return a}catch(e){"ENOENT"!==e.code&&console.error(`Error reading or parsing config file at ${t}:`,e)}throw Error("Configuration file not found or invalid. Please create .z-ai-config in your project, home directory, or /etc.")};class p{constructor(e){this.config=e,this.chat={completions:{create:this.createChatCompletion.bind(this)}},this.images={generations:{create:this.createImageGeneration.bind(this)}},this.functions={invoke:this.invokeFunction.bind(this)}}static async create(){return new p(await u())}async createChatCompletion(e){let{baseUrl:t,chatId:a,userId:r,apiKey:o}=this.config,s=`${t}/chat/completions`,i={"Content-Type":"application/json",Authorization:`Bearer ${o}`,"X-Z-AI-From":"Z"};a&&(i["X-Chat-Id"]=a),r&&(i["X-User-Id"]=r);try{let t=await fetch(s,{method:"POST",headers:i,body:JSON.stringify(e)});if(!t.ok){let e=await t.text();throw Error(`API request failed with status ${t.status}: ${e}`)}return await t.json()}catch(e){throw console.error("Failed to make API request:",e),e}}async createImageGeneration(e){let{baseUrl:t,apiKey:a,chatId:r,userId:o}=this.config,s=`${t}/images/generations`,i={"Content-Type":"application/json",Authorization:`Bearer ${a}`,"X-Z-AI-From":"Z"};r&&(i["X-Chat-Id"]=r),o&&(i["X-User-Id"]=o);let n={...e};try{let e=await fetch(s,{method:"POST",headers:i,body:JSON.stringify(n)});if(!e.ok){let t=await e.text();throw Error(`API request failed with status ${e.status}: ${t}`)}let t=await e.json(),a=await Promise.all(t.data.map(async e=>e.url?{base64:await this.downloadImageAsBase64(e.url),format:"png"}:e));return{...t,data:a}}catch(e){throw console.error("Failed to make image generation request:",e),e}}async downloadImageAsBase64(e){try{let t=await fetch(e);if(!t.ok)throw Error(`Failed to download image: ${t.status}`);let a=await t.arrayBuffer(),r=Buffer.from(a).toString("base64");return`${r}`}catch(e){throw console.error("Failed to download and convert image to base64:",e),e}}async invokeFunction(e,t){let{baseUrl:a,apiKey:r,chatId:o,userId:s}=this.config,i=`${a}/functions/invoke`,n={"Content-Type":"application/json",Authorization:`Bearer ${r}`,"X-Z-AI-From":"Z"};o&&(n["X-Chat-Id"]=o),s&&(n["X-User-Id"]=s);try{let a=await fetch(i,{method:"POST",headers:n,body:JSON.stringify({function_name:e,arguments:t})});if(!a.ok){let e=await a.text();throw Error(`Function invoke failed with status ${a.status}: ${e}`)}return(await a.json()).result}catch(e){throw console.error("Failed to invoke remote function:",e),e}}}async function m(e){try{let{message:t}=await e.json();if(!t)return n.NextResponse.json({error:"Message is required"},{status:400});let a=await p.create(),r=await a.chat.completions.create({messages:[{role:"system",content:`Voc\xea \xe9 o assistente virtual da CORTEX, uma empresa especializada em solu\xe7\xf5es de tecnologia para automa\xe7\xe3o de processos, integra\xe7\xe3o de sistemas, desenvolvimento de software sob medida e intelig\xeancia artificial aplicada.

Seu papel \xe9:
1. Atender de forma profissional e amig\xe1vel
2. Explicar os servi\xe7os da CORTEX de forma clara
3. Identificar oportunidades de neg\xf3cio
4. Agendar conversas com especialistas quando necess\xe1rio
5. Fornecer informa\xe7\xf5es sobre como a tecnologia pode ajudar empresas

Servi\xe7os principais da CORTEX:
- Automa\xe7\xe3o de Processos: Transformar tarefas manuais em processos autom\xe1ticos
- Integra\xe7\xe3o de Sistemas: Conectar diferentes softwares e plataformas
- Assistentes Virtuais (Chatbots): Desenvolver chatbots inteligentes
- Aplicativos e Sistemas Sob Medida: Criar solu\xe7\xf5es personalizadas
- Intelig\xeancia Artificial Aplicada: Analisar dados e gerar insights
- Tratamento e Organiza\xe7\xe3o de Dados: Transformar dados brutos em informa\xe7\xf5es \xfateis

Sempre que identificar um cliente potencial, sugira agendar uma conversa com um especialista da CORTEX.`},{role:"user",content:t}],temperature:.7,max_tokens:500}),o=r.choices[0]?.message?.content||"Desculpe, n\xe3o consegui processar sua mensagem no momento.";return n.NextResponse.json({response:o})}catch(e){return console.error("Error in chat API:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let h=new o.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/chat/route",pathname:"/api/chat",filename:"route",bundlePath:"app/api/chat/route"},resolvedPagePath:"C:\\Users\\kelvem.loubach\\Downloads\\SITE-EMPRESA\\src\\app\\api\\chat\\route.ts",nextConfigOutput:"standalone",userland:r}),{workAsyncStorage:f,workUnitAsyncStorage:g,serverHooks:x}=h;function w(){return(0,i.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:g})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[447,580],()=>a(8193));module.exports=r})();